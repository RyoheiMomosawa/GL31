/******************************************************************************
**	タイトル  :
**	ファイル名: Title.cpp
**	作成者    : AT-13B-284 出席番号 14 木村 祥貴
**	作成日    : 2016/7/19
**	修正日	　: //
********************************************************************************/

/******************************************************************************
**	インクルードファイル
******************************************************************************/

// 自身ヘッダ
#include "Title.h"


// オブジェクト
#include "Scene2DGL.h"


// システム
#include "Manager.h"
//#include "Game.h"
#include "CharaSelect.h"
#include "main.h"
#include "Fade.h"


/******************************************************************************
**	静的メンバ変数
******************************************************************************/


/******************************************************************************
**	関数名: Title
**		関数の概要
**	引数  : void
**	戻り値: void
**	説明  : コンストラクタ
******************************************************************************/
Title::Title()
{
	m_pBg = NULL;

}


/******************************************************************************
**	関数名: ~Title
**		関数の概要
**	引数  : void
**	戻り値: void
**	説明  : デストラクタ
******************************************************************************/
Title::~Title()
{
}


/******************************************************************************
**	関数名: 初期化処理 Init
**		関数の概要
**	引数  :
**	戻り値: HRESULT
**	説明  : 初期化処理
******************************************************************************/
void Title::Init()
{
	m_pBg = Scene2DGL::Create();
	m_pBg->SetTexture( "./data/TEXTURE/bg000.tga" );
	m_pBg->SetParam( &Vector3( ( float )SCREEN_WIDTH, ( float )SCREEN_HEIGHT, 0.0f ), SCENEPARAM_SIZE );
	m_pBg->SetParam( &Vector3( ( float )SCREEN_WIDTH * 0.5f, ( float )SCREEN_HEIGHT * 0.5f, 0.0f ), SCENEPARAM_POS );

	m_pBg->InitAll();

}


/******************************************************************************
**	関数名: 終了処理 Uninit
**		関数の概要
**	引数  : void
**	戻り値: int
**	説明  :
******************************************************************************/
void Title::Uninit()
{
	m_pBg->UninitAll();
	m_pBg = NULL;

}


/******************************************************************************
**	関数名: 更新処理 Update
**		関数の概要
**	引数  : void
**	戻り値: void
**	説明  :
******************************************************************************/
void Title::Update()
{
	m_pBg->UpdateAll();

	// モードの切り替え
	if( Manager::GetKeyboard()->GetTrigger( DIK_RETURN ) && !m_bModeFlag )
	{
		Fade::Set( new CharaSelect );
		m_bModeFlag = true;
			
	}

}


/******************************************************************************
**	関数名: 描画処理 Draw
**		関数の概要
**	引数  : void
**	戻り値: void
**	説明  :
******************************************************************************/
void Title::Draw()
{
	m_pBg->DrawAll();

}

#pragma once
/******************************************************************************
**	タイトル  :
**	ファイル名: .h
**	作成者    : AT-13B-284 出席番号 14 木村 祥貴
**	作成日    : 2016//
**	修正日	　: //
********************************************************************************/

/******************************************************************************
**	更新内容
**
**
**
******************************************************************************/

/******************************************************************************
**	インクルードファイル
******************************************************************************/
#include "SceneGL.h"


/******************************************************************************
**	ライブラリリンク
******************************************************************************/



/******************************************************************************
**	マクロ定義
******************************************************************************/

/* テクスチャデータ */
typedef struct tagTEXTUREIMAGE
{
	unsigned int ImageSize; // 画像の大きさ
	unsigned char *ImageData; // データサイズ
	unsigned int format; // フォーマット(1ピクセル毎のサイズ)
	unsigned int InternalFormat; // 内部フォーマット
	unsigned int width; // 幅
	unsigned int height; // 高さ
	unsigned int bpp; // Byte Per Pixel(1ピクセルあたりの大きさ)

}TEXTUREIMAGE, LPTEXTUREIMAGE;

#ifndef TextureImage
typedef TEXTUREIMAGE TextureImage;

#endif

/******************************************************************************
**	クラス定義
******************************************************************************/
class ImageTGA
{
	public:
	ImageTGA();
	virtual ~ImageTGA();

	// メソッド
	inline bool Read( const char *FileName );
	unsigned int CreateTexture( const char *FileName );


	protected:
#ifndef TextureImage
	TextureImage

#else
	TEXTUREIMAGE

#endif // !TextureImage
	TGATexImg; // テクスチャデータ


};


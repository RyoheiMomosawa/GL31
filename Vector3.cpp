/******************************************************************************
**	タイトル  :
**	ファイル名: Vector3.cpp
**	作成者    : AT-13B-284 出席番号 14 木村 祥貴
**	作成日    : 2016/4/22
**	修正日	　: //
********************************************************************************/

/******************************************************************************
**	インクルードファイル
******************************************************************************/
#include "Vector3.h"


/******************************************************************************
**	静的メンバ変数
******************************************************************************/


/******************************************************************************
**	関数名: Vector3
**		関数の概要
**	引数  : void
**	戻り値: void
**	説明  : コンストラクタ
******************************************************************************/
Vector3::Vector3()
{
	x = y = z = 0.0f;

}


/******************************************************************************
**	関数名:Vector3
**		関数の概要
**	引数  : float x, float y, float z 
**	戻り値: void
**	説明  : コンストラクタ 初期化時と同時に値を挿入
******************************************************************************/
Vector3::Vector3( float x, float y, float z )
{
	this->x = x;
	this->y = y;
	this->z = z;

}


/******************************************************************************
**	関数名:
**		関数の概要
**	引数  : void
**	戻り値: void
**	説明  : デストラクタ
******************************************************************************/
Vector3::~Vector3()
{
	

}


/******************************************************************************
**	関数名: operator+=
**	関数の概要
**	引数  : const Vector3&
**	戻り値: Vector3&
**	説明  : 
******************************************************************************/
Vector3& Vector3::operator+=( const Vector3& Vec )
{
	this->x += Vec.x;
	this->y += Vec.y;
	this->z += Vec.z;

	return *this;

}


/******************************************************************************
**	関数名: operator-=
**	関数の概要
**	引数  : const Vector3&
**	戻り値: Vector3&
**	説明  :
******************************************************************************/
Vector3& Vector3::operator-=( const Vector3& Vec )
{
	this->x -= Vec.x;
	this->y -= Vec.y;
	this->z -= Vec.z;

	return *this;

}


/******************************************************************************
**	関数名: operator*=
**	関数の概要
**	引数  : const Vector3&
**	戻り値: Vector3&
**	説明  :
******************************************************************************/
Vector3& Vector3::operator*=( const Vector3& Vec )
{
	this->x *= Vec.x;
	this->y *= Vec.y;
	this->z *= Vec.z;

	return *this;

}


/******************************************************************************
**	関数名: operator*=
**	関数の概要
**	引数  : const float
**	戻り値: Vector3&
**	説明  :
******************************************************************************/
Vector3& Vector3::operator*=( const float Vec )
{
	this->x *= Vec;
	this->y *= Vec;
	this->z *= Vec;

	return *this;

}


/******************************************************************************
**	関数名: operator/=
**	関数の概要
**	引数  : const Vector3&
**	戻り値: Vector3&
**	説明  :
******************************************************************************/
Vector3& Vector3::operator/=( const Vector3& Vec )
{
	this->x /= Vec.x;
	this->y /= Vec.y;
	this->z /= Vec.z;

	return *this;

}


/******************************************************************************
**	関数名: operator/=
**	関数の概要
**	引数  : const float
**	戻り値: Vector3&
**	説明  :
******************************************************************************/
Vector3& Vector3::operator/=( const float Vec )
{
	this->x /= Vec;
	this->y /= Vec;
	this->z /= Vec;

	return *this;

}


/******************************************************************************
**	関数名: operator+
**	関数の概要
**	引数  : void
**	戻り値: Vector3
**	説明  :
******************************************************************************/
Vector3 Vector3::operator+() const
{
	Vector3 Vec;
	Vec.x = +this->x;
	Vec.y = +this->y;
	Vec.z = +this->z;
	return Vec;

}


/******************************************************************************
**	関数名: operator-
**	関数の概要
**	引数  : void
**	戻り値: Vector3
**	説明  :
******************************************************************************/
Vector3 Vector3::operator-() const
{
	Vector3 Vec;
	Vec.x = -this->x;
	Vec.y = -this->y;
	Vec.z = -this->z;
	return Vec;

}


/******************************************************************************
**	関数名: operator+
**	関数の概要
**	引数  : const Vector3&
**	戻り値: Vector3
**	説明  :
******************************************************************************/
Vector3 Vector3::operator+( const Vector3& Vec ) const
{
	Vector3 v;
	v.x = this->x + Vec.x;
	v.y = this->y + Vec.y;
	v.z = this->z + Vec.z;

	return v;

}


/******************************************************************************
**	関数名: operator-
**	関数の概要
**	引数  : const Vector3& const
**	戻り値: Vector3
**	説明  :
******************************************************************************/
Vector3 Vector3::operator-( const Vector3& Vec ) const
{
	Vector3 v;
	v.x = this->x - Vec.x;
	v.y = this->y - Vec.y;
	v.z = this->z - Vec.z;

	return v;

}


/******************************************************************************
**	関数名: operator*
**	関数の概要
**	引数  : const Vector3& const
**	戻り値: Vector3
**	説明  :
******************************************************************************/
Vector3 Vector3::operator*( const Vector3& Vec ) const
{
	Vector3 v;
	v.x = this->x * Vec.x;
	v.y = this->y * Vec.y;
	v.z = this->z * Vec.z;

	return v;

}


/******************************************************************************
**	関数名: operator*
**	関数の概要
**	引数  : const float const
**	戻り値: Vector3
**	説明  :
******************************************************************************/
Vector3 Vector3::operator*( const float Vec ) const
{
	Vector3 v;
	v.x = this->x * Vec;
	v.y = this->y * Vec;
	v.z = this->z * Vec;

	return v;

}


/******************************************************************************
**	関数名: operator/
**	関数の概要
**	引数  : const Vector3& const
**	戻り値: Vector3
**	説明  :
******************************************************************************/
Vector3 Vector3::operator/( const Vector3& Vec ) const
{
	Vector3 v;
	v.x = this->x / Vec.x;
	v.y = this->y / Vec.y;
	v.z = this->z / Vec.z;

	return v;

}


/******************************************************************************
**	関数名: operator/
**	関数の概要
**	引数  : const float const
**	戻り値: Vector3
**	説明  :
******************************************************************************/
Vector3 Vector3::operator/( const float Vec ) const
{
	Vector3 v;
	v.x = this->x / Vec;
	v.y = this->y / Vec;
	v.z = this->z / Vec;

	return v;

}

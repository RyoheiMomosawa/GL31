/******************************************************************************
**	タイトル  :
**	ファイル名: DirectInput.cpp
**	作成者    : AT-13B-284 出席番号 14 木村 祥貴
**	作成日    : 2016/5/9
**	修正日	　: //
********************************************************************************/

/******************************************************************************
**	インクルードファイル
******************************************************************************/
#include "DirectInput.h"


/******************************************************************************
**	静的メンバ変数
******************************************************************************/


/******************************************************************************
**	マクロ定義
******************************************************************************/


/******************************************************************************
**	関数名:
**		関数の概要
**	引数  : void
**	戻り値: void
**	説明  : コンストラクタ
******************************************************************************/
input::DirectInput::DirectInput()
{
}


/******************************************************************************
**	関数名:
**		関数の概要
**	引数  : void
**	戻り値: void
**	説明  : デストラクタ
******************************************************************************/
input::DirectInput::~DirectInput()
{
}


/******************************************************************************
**	関数名:
**	関数の概要
**	引数  :
**	戻り値:
**	説明  :
******************************************************************************/
bool input::DirectInput::GetPress( int nDIK_Key )
{
	return ( this->m_State[ nDIK_Key ] & 0x80 ) ? true : false;

}


/******************************************************************************
**	関数名:
**	関数の概要
**	引数  :
**	戻り値:
**	説明  :
******************************************************************************/
bool input::DirectInput::GetTrigger( int nDIK_Key )
{
	return ( this->m_StateTrigger[ nDIK_Key ] & 0x80 ) ? true : false;

}


/******************************************************************************
**	関数名:
**	関数の概要
**	引数  :
**	戻り値:
**	説明  :
******************************************************************************/
bool input::DirectInput::GetRelease( int nDIK_Key )
{
	return ( this->m_StateRelese[ nDIK_Key ] & 0x80 ) ? true : false;

}


/******************************************************************************
**	関数名:
**	関数の概要
**	引数  :
**	戻り値:
**	説明  :
******************************************************************************/
bool input::DirectInput::GetRepeat( int nDIK_Key )
{
	this->m_StateRepeatCount[ nDIK_Key ] = ( this->m_StateRepeat[ nDIK_Key ] & 0x80 ) ? this->m_StateRepeatCount[ nDIK_Key ] + 1 : 0;
	return ( this->m_StateRepeatCount[ nDIK_Key ] >= this->m_RepeatSpeed || this->m_StateRepeatCount[ nDIK_Key ] == 1 ) ? true : false;

}


/******************************************************************************
**	関数名:
**	関数の概要
**	引数  :
**	戻り値:
**	説明  :
******************************************************************************/
void input::DirectInput::SetRepeatSpeed( unsigned int speed )
{
	m_RepeatSpeed = speed;

}

